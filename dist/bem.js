!function(e,n){if("object"==typeof exports&&"object"==typeof module)module.exports=n();else if("function"==typeof define&&define.amd)define([],n);else{var l=n();for(var o in l)("object"==typeof exports?exports:e)[o]=l[o]}}(this,function(){return function(e){function n(o){if(l[o])return l[o].exports;var t=l[o]={exports:{},id:o,loaded:!1};return e[o].call(t.exports,t,t.exports,n),t.loaded=!0,t.exports}var l={};return n.m=e,n.c=l,n.p="",n(0)}([function(e,n){"use strict";function l(e,n){if(o.f[4]++,o.s[18]++,!(e instanceof n))throw o.b[5][0]++,o.s[19]++,new TypeError("Cannot call a class as a function");o.b[5][1]++}var o=Function("return this")();o.__coverage__||(o.__coverage__={}),o=o.__coverage__,o["/Users/svenvandescheur/PycharmProjects/MaykinMedia/bem.js/src/bem.js"]||(o["/Users/svenvandescheur/PycharmProjects/MaykinMedia/bem.js/src/bem.js"]={path:"/Users/svenvandescheur/PycharmProjects/MaykinMedia/bem.js/src/bem.js",s:{1:0,2:0,3:1,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:1,18:0,19:0,20:0,21:1,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0},b:{1:[0,0],2:[0,0],3:[0,0],4:[0,0],5:[0,0],6:[0,0],7:[0,0],8:[0,0],9:[0,0],10:[0,0],11:[0,0]},f:{1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0},fnMap:{1:{name:"(anonymous_1)",line:16,loc:{start:{line:16,column:6},end:{line:16,column:6}}},2:{name:"defineProperties",line:16,loc:{start:{line:16,column:6},end:{line:16,column:6}}},3:{name:"(anonymous_3)",line:16,loc:{start:{line:16,column:6},end:{line:16,column:6}}},4:{name:"_classCallCheck",line:16,loc:{start:{line:16,column:6},end:{line:16,column:6}}},5:{name:"(anonymous_5)",line:24,loc:{start:{line:24,column:22},end:{line:24,column:22}}},6:{name:"BEM",line:24,loc:{start:{line:24,column:22},end:{line:24,column:22}}},7:{name:"getBEMNode",line:24,loc:{start:{line:24,column:22},end:{line:24,column:48}}},8:{name:"getBEMNodes",line:36,loc:{start:{line:36,column:23},end:{line:36,column:49}}},9:{name:"getChildBEMNode",line:49,loc:{start:{line:49,column:27},end:{line:49,column:59}}},10:{name:"getChildBEMNodes",line:62,loc:{start:{line:62,column:28},end:{line:62,column:60}}},11:{name:"getBEMClassName",line:74,loc:{start:{line:74,column:27},end:{line:74,column:53}}},12:{name:"addModifier",line:97,loc:{start:{line:97,column:23},end:{line:97,column:39}}},13:{name:"removeModifier",line:131,loc:{start:{line:131,column:26},end:{line:131,column:42}}},14:{name:"toggleModifier",line:143,loc:{start:{line:143,column:26},end:{line:143,column:42}}},15:{name:"hasModifier",line:159,loc:{start:{line:159,column:23},end:{line:159,column:39}}}},statementMap:{1:{start:{line:16,column:6},end:{line:16,column:6}},2:{start:{line:16,column:6},end:{line:16,column:6}},3:{start:{line:16,column:6},end:{line:16,column:6}},4:{start:{line:16,column:6},end:{line:16,column:6}},5:{start:{line:16,column:6},end:{line:16,column:6}},6:{start:{line:16,column:6},end:{line:16,column:6}},7:{start:{line:16,column:6},end:{line:16,column:6}},8:{start:{line:16,column:6},end:{line:16,column:6}},9:{start:{line:16,column:6},end:{line:16,column:6}},10:{start:{line:16,column:6},end:{line:16,column:6}},11:{start:{line:16,column:6},end:{line:16,column:6}},12:{start:{line:16,column:6},end:{line:16,column:6}},13:{start:{line:16,column:6},end:{line:16,column:6}},14:{start:{line:16,column:6},end:{line:16,column:6}},15:{start:{line:16,column:6},end:{line:16,column:6}},16:{start:{line:16,column:6},end:{line:16,column:6}},17:{start:{line:16,column:6},end:{line:16,column:6}},18:{start:{line:16,column:6},end:{line:16,column:6}},19:{start:{line:16,column:6},end:{line:16,column:6}},20:{start:{line:16,column:6},end:{line:166,column:15}},21:{start:{line:24,column:22},end:{line:24,column:22}},22:{start:{line:24,column:22},end:{line:24,column:22}},23:{start:{line:24,column:22},end:{line:166,column:15}},24:{start:{line:25,column:8},end:{line:26,column:8}},25:{start:{line:26,column:8},end:{line:27,column:5}},26:{start:{line:37,column:8},end:{line:38,column:8}},27:{start:{line:38,column:8},end:{line:39,column:5}},28:{start:{line:50,column:8},end:{line:51,column:8}},29:{start:{line:51,column:8},end:{line:52,column:5}},30:{start:{line:63,column:8},end:{line:64,column:8}},31:{start:{line:64,column:8},end:{line:65,column:5}},32:{start:{line:75,column:8},end:{line:77,column:8}},33:{start:{line:77,column:8},end:{line:81,column:8}},34:{start:{line:78,column:12},end:{line:79,column:9}},35:{start:{line:81,column:8},end:{line:85,column:8}},36:{start:{line:82,column:12},end:{line:83,column:9}},37:{start:{line:85,column:8},end:{line:86,column:5}},38:{start:{line:98,column:8},end:{line:101,column:8}},39:{start:{line:101,column:8},end:{line:122,column:8}},40:{start:{line:102,column:12},end:{line:106,column:12}},41:{start:{line:103,column:16},end:{line:104,column:13}},42:{start:{line:106,column:12},end:{line:107,column:12}},43:{start:{line:107,column:12},end:{line:110,column:12}},44:{start:{line:110,column:12},end:{line:115,column:12}},45:{start:{line:111,column:16},end:{line:112,column:13}},46:{start:{line:115,column:12},end:{line:119,column:12}},47:{start:{line:116,column:16},end:{line:117,column:13}},48:{start:{line:119,column:12},end:{line:120,column:9}},49:{start:{line:122,column:8},end:{line:123,column:5}},50:{start:{line:132,column:8},end:{line:133,column:8}},51:{start:{line:133,column:8},end:{line:134,column:5}},52:{start:{line:144,column:8},end:{line:148,column:8}},53:{start:{line:145,column:12},end:{line:146,column:12}},54:{start:{line:146,column:12},end:{line:147,column:9}},55:{start:{line:148,column:8},end:{line:149,column:5}},56:{start:{line:160,column:8},end:{line:161,column:8}},57:{start:{line:161,column:8},end:{line:162,column:5}},58:{start:{line:166,column:15},end:{line:166,column:15}},59:{start:{line:166,column:15},end:{line:167,column:9}},60:{start:{line:167,column:9},end:{line:null,column:null}}},branchMap:{1:{line:16,type:"binary-expr",locations:[{start:{line:16,column:6},end:{line:16,column:6}},{start:{line:16,column:6},end:{line:16,column:6}}]},2:{line:16,type:"if",locations:[{start:{line:16,column:6},end:{line:16,column:6}},{start:{line:16,column:6},end:{line:16,column:6}}]},3:{line:16,type:"if",locations:[{start:{line:16,column:6},end:{line:16,column:6}},{start:{line:16,column:6},end:{line:16,column:6}}]},4:{line:16,type:"if",locations:[{start:{line:16,column:6},end:{line:16,column:6}},{start:{line:16,column:6},end:{line:16,column:6}}]},5:{line:16,type:"if",locations:[{start:{line:16,column:6},end:{line:16,column:6}},{start:{line:16,column:6},end:{line:16,column:6}}]},6:{line:77,type:"if",locations:[{start:{line:77,column:8},end:{line:77,column:8}},{start:{line:77,column:8},end:{line:77,column:8}}]},7:{line:81,type:"if",locations:[{start:{line:81,column:8},end:{line:81,column:8}},{start:{line:81,column:8},end:{line:81,column:8}}]},8:{line:102,type:"if",locations:[{start:{line:102,column:12},end:{line:102,column:12}},{start:{line:102,column:12},end:{line:102,column:12}}]},9:{line:110,type:"if",locations:[{start:{line:110,column:12},end:{line:110,column:12}},{start:{line:110,column:12},end:{line:110,column:12}}]},10:{line:115,type:"if",locations:[{start:{line:115,column:12},end:{line:115,column:12}},{start:{line:115,column:12},end:{line:115,column:12}}]},11:{line:144,type:"if",locations:[{start:{line:144,column:8},end:{line:144,column:8}},{start:{line:144,column:8},end:{line:144,column:8}}]}},code:["/**"," * This module provides BEM (Block Element Modifier) related methods"," * These methods can be used as an abstraction to talk to the DOM"," * BEM is a CSS methodology separating blocks (block) from elements (__element) and modifiers (--modifier)"," * BEM examples: alert, alert--warning, form__button, form__button--disabled"," * @see https://en.bem.info/methodology/key-concepts/"," * @module"," */","","","/**"," * BEM class"," * Contains static methods with BEM abstraction to DOM manipulation"," * @class"," */","class BEM {","    /**","     * Get a node by BEM (Block Element Modifier) description","     * @param {string} block The outer block or component","     * @param {string} [element] An optional element within the outer block","     * @param {string} [modifier] An optional modifier or (e.g. state or theme) for a block/element","     * @returns {HTMLElement}","     */","    static getBEMNode(block, element, modifier) {","        let selector = `.${BEM.getBEMClassName(block, element, modifier)}`;","        return document.querySelector(selector);","    }","","    /**","     * Get multiple nodes by BEM (Block Element Modifier) description","     * @param {string} block The outer block or component","     * @param {string} [element] An optional element within the outer block","     * @param {string} [modifier] An optional modifier or (e.g. state or theme) for a block/element","     * @returns {NodeList}","     */","    static getBEMNodes(block, element, modifier) {","        let selector = `.${BEM.getBEMClassName(block, element, modifier)}`;","        return document.querySelectorAll(selector);","    }","","    /**","     * Get a child node by BEM (Block Element Modifier) description","     * @param {HTMLElement} node The parent node","     * @param {string} block The outer block or component","     * @param {string} [element] An optional element within the outer block","     * @param {string} [modifier] An optional modifier or (e.g. state or theme) for a block/element","     * @returns {HTMLElement}","     */","    static getChildBEMNode(node, block, element, modifier) {","        let selector = `.${BEM.getBEMClassName(block, element, modifier)}`;","        return node.querySelector(selector);","    }","","    /**","     * Get a child node by BEM (Block Element Modifier) description","     * @param {HTMLElement} node The parent node","     * @param {string} block The outer block or component","     * @param {string} [element] An optional element within the outer block","     * @param {string} [modifier] An optional modifier or (e.g. state or theme) for a block/element","     * @returns {HTMLElement}","     */","    static getChildBEMNodes(node, block, element, modifier) {","        let selector = `.${BEM.getBEMClassName(block, element, modifier)}`;","        return node.querySelectorAll(selector);","    }","","    /**","     * Get a BEM (Block Element Modifier) class name","     * @param {string} block The outer block or component","     * @param {string} [element] An optional element within the outer block","     * @param {string} [modifier] An optional modifier or (e.g. state or theme) for a block/element","     * @returns {string}","     */","    static getBEMClassName(block, element, modifier) {","        let className = block;","","        if (element) {","            className += `__${element}`;","        }","","        if (modifier) {","            className += `--${modifier}`;","        }","","        return className;","    }","","","    /**","     * Add an additional class name with a specific modifier (--modifier) to a BEM (Block Element Modifier) element","     * A modifier class is created for each of the existing class names",'     * Class names containing "--" (modifier pattern) are discarded',"     * Double class names are prevented","     * @param {HTMLElement} node The block/element to append the class name to (block, block__element)","     * @param {string} modifier The name of the modifier (--name)","     */","    static addModifier(node, modifier) {","        let classNames = node.className.split(' '),","            modifierClassNames = '';","","        for (let i in classNames) {","            if (!classNames.hasOwnProperty(i)) {","                continue;","            }","","            let className = classNames[i];","            let modifierClassName = `${className}--${modifier}`;","",'            // Discard class names containing "--" (modifier pattern)',"            if (className.match('--')) {","                continue;","            }","","            // Prevent double class names","            if (node.className.match(modifierClassName)) {","                continue;","            }","","            modifierClassNames += `${className}--${modifier} `;","        }","","        node.className = `${node.className.trim()} ${modifierClassNames}`.trim();","    }","","","    /**","     * Remove all class names with a specific modifier (--modifier) from a BEM (Block Element Modifier) element","     * @param {HTMLElement} node The block/element to remove the class names from (block, block__element)","     * @param {string} modifier The name of the modifier (--name)","     */","    static removeModifier(node, modifier) {","        let regex = new RegExp(`[^^\\\\s]+?--${modifier}\\\\s?`, 'g');  // Regex matching all class names containing \"--\" + modifier","        node.className = node.className.replace(regex, '').trim();","    }","","","    /**","     * Toggles between addModifier() and removeModifier() based on the presence of modifier (--modifier)","     * Block/element names are NOT taken into account while matching","     * @param {HTMLElement} node The block/element to remove the class names from (block, block__element)","     * @param {string} modifier The name of the modifier (--name)","     */","    static toggleModifier(node, modifier) {","        if (BEM.hasModifier(node, modifier)) {","            BEM.removeModifier(node, modifier);","            return;","        }","        BEM.addModifier(node, modifier);","    }","","","    /**","     * Returns whether node has modifier (--modifier)","     * Block/element names are NOT taken into account while matching","     * @param {HTMLElement} node The block/element to check","     * @param {string} modifier The name of the modifier (--name)","     * @returns {boolean}","     */","    static hasModifier(node, modifier) {","        let regex = new RegExp(`--${modifier}(?=\\\\s|$)`, 'g');  // Regex matching specific modifier","        return node.className.match(regex);","    }","}","","","export default BEM;","export { BEM };",""]}),o=o["/Users/svenvandescheur/PycharmProjects/MaykinMedia/bem.js/src/bem.js"],o.s[1]++,Object.defineProperty(n,"__esModule",{value:!0}),o.s[2]++;var t=function(){function e(e,n){o.f[2]++,o.s[4]++;for(var l=0;l<n.length;l++){o.s[5]++;var t=n[l];o.s[6]++,t.enumerable=(o.b[1][0]++,t.enumerable||(o.b[1][1]++,!1)),o.s[7]++,t.configurable=!0,o.s[8]++,"value"in t?(o.b[2][0]++,o.s[9]++,t.writable=!0):o.b[2][1]++,o.s[10]++,Object.defineProperty(e,t.key,t)}}return o.f[1]++,o.s[11]++,function(n,l,t){return o.f[3]++,o.s[12]++,l?(o.b[3][0]++,o.s[13]++,e(n.prototype,l)):o.b[3][1]++,o.s[14]++,t?(o.b[4][0]++,o.s[15]++,e(n,t)):o.b[4][1]++,o.s[16]++,n}}();o.s[20]++;var i=function(){function e(){o.f[6]++,o.s[22]++,l(this,e)}return o.f[5]++,o.s[23]++,t(e,null,[{key:"getBEMNode",value:function(n,l,t){o.f[7]++,o.s[24]++;var i="."+e.getBEMClassName(n,l,t);return o.s[25]++,document.querySelector(i)}},{key:"getBEMNodes",value:function(n,l,t){o.f[8]++,o.s[26]++;var i="."+e.getBEMClassName(n,l,t);return o.s[27]++,document.querySelectorAll(i)}},{key:"getChildBEMNode",value:function(n,l,t,i){o.f[9]++,o.s[28]++;var m="."+e.getBEMClassName(l,t,i);return o.s[29]++,n.querySelector(m)}},{key:"getChildBEMNodes",value:function(n,l,t,i){o.f[10]++,o.s[30]++;var m="."+e.getBEMClassName(l,t,i);return o.s[31]++,n.querySelectorAll(m)}},{key:"getBEMClassName",value:function(e,n,l){o.f[11]++,o.s[32]++;var t=e;return o.s[33]++,n?(o.b[6][0]++,o.s[34]++,t+="__"+n):o.b[6][1]++,o.s[35]++,l?(o.b[7][0]++,o.s[36]++,t+="--"+l):o.b[7][1]++,o.s[37]++,t}},{key:"addModifier",value:function(e,n){o.f[12]++,o.s[38]++;var l=e.className.split(" "),t="";o.s[39]++;for(var i in l)if(o.s[40]++,l.hasOwnProperty(i)){o.b[8][1]++,o.s[42]++;var m=l[i];o.s[43]++;var a=m+"--"+n;o.s[44]++,m.match("--")?(o.b[9][0]++,o.s[45]++):(o.b[9][1]++,o.s[46]++,e.className.match(a)?(o.b[10][0]++,o.s[47]++):(o.b[10][1]++,o.s[48]++,t+=m+"--"+n+" "))}else o.b[8][0]++,o.s[41]++;o.s[49]++,e.className=(e.className.trim()+" "+t).trim()}},{key:"removeModifier",value:function(e,n){o.f[13]++,o.s[50]++;var l=new RegExp("[^^\\s]+?--"+n+"\\s?","g");o.s[51]++,e.className=e.className.replace(l,"").trim()}},{key:"toggleModifier",value:function(n,l){return o.f[14]++,o.s[52]++,e.hasModifier(n,l)?(o.b[11][0]++,o.s[53]++,e.removeModifier(n,l),void o.s[54]++):(o.b[11][1]++,o.s[55]++,void e.addModifier(n,l))}},{key:"hasModifier",value:function(e,n){o.f[15]++,o.s[56]++;var l=new RegExp("--"+n+"(?=\\s|$)","g");return o.s[57]++,e.className.match(l)}}]),o.s[58]++,e}();o.s[59]++,n.default=i,o.s[60]++,n.BEM=i}])});